/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp QUESTION       &kp PERIOD         &kp COMMA  &kp L     &kp P                     &kp Y      &kp F          &kp G        &kp C         &kp R  &kp Q     &kp EQUAL
&mt LSHIFT ESCAPE  &lt 4 A            &kp O      &kp E     &lt 3 I                   &kp U      &kp D          &lt 2 H      &kp T         &kp N  &kp S     &kp UNDERSCORE
&mt LCTRL SLASH    &kp DOUBLE_QUOTES  &kp SQT    &kp J     &kp K                     &kp X      &kp N          &kp M        &kp W         &kp V  &kp FSLH  &kp MINUS
                                                 &kp LGUI  &mt LEFT_SHIFT BACKSPACE  &kp TAB    &mt LCTRL RET  &lt 1 SPACE  &kp LEFT_ALT
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp COLON  &kp SEMICOLON  &kp LESS_THAN         &kp GREATER_THAN       &kp N5           &kp PLUS    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp ASTERISK  &trans
&trans  &trans     &kp AT_SIGN    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp MINUS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp HASH         &kp PERCENT   &trans
&trans  &trans     &kp GRAVE      &trans                &kp TILDE              &kp TILDE        &kp DOLLAR  &kp BACKSLASH     &kp SLASH          &kp PIPE         &trans        &trans
                                  &trans                &trans                 &trans           &trans      &trans            &trans
            >;
        };

        navi {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp HOME  &kp UP    &kp END    &kp PG_UP        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans           &trans  &trans  &trans  &trans  &trans  &trans
                          &trans    &trans     &trans           &trans  &trans  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PERIOD  &kp N7        &kp N8        &kp N9        &kp SLASH     &trans
                        &trans  &trans  &trans    &trans      &trans        &trans
            >;
        };

        shortcut {
            bindings = <
&trans  &trans  &trans  &trans     &kp LC(F)   &kp LC(LS(F))    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp K_CUT  &kp K_COPY  &kp K_PASTE      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LC(S)  &kp K_UNDO  &kp K_REDO       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans     &trans      &trans           &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R      &kp T        &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp A  &kp S  &kp D         &kp F      &kp G        &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V      &kp B        &trans  &trans  &trans  &trans  &trans  &trans
                         &kp LEFT_ALT  &kp LSHFT  &kp SPACE    &sl 0   &trans  &trans
            >;
        };
    };
};
