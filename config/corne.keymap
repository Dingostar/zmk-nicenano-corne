/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define dk_question UNDERSCORE
#define dk_quot AT_SIGN
#define dk_apos BACKSLASH
#define dk_equal RIGHT_PARENTHESIS
#define dk_underscore QUESTION
#define dk_dash SLASH
#define dk_fslash AMPERSAND
#define dk_bslash RA(NON_US_BACKSLASH)
#define dk_pipe RA(EQUAL)

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to-gaming {
            timeout-ms = <30>;
            bindings = <&to 5>;
            key-positions = <36 37 38 39 40 41>;
        };

        to-experimental {
            timeout-ms = <30>;
            bindings = <&to 0>;
            key-positions = <39 40 41>;
        };
        to-default {
            timeout-ms = <30>;
            bindings = <&to 6>;
            key-positions = <36 37 38>;
        };

        ae {
            timeout-ms = <30>;
            bindings = <&kp SEMICOLON>;
            key-positions = <16 15>;
        };

        oe {
            timeout-ms = <30>;
            bindings = <&kp APOS>;
            key-positions = <16 14>;
        };

        aa {
            timeout-ms = <30>;
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 13>;
        };

        ctrlspace {
            bindings = <&kp LC(SPACE)>;
            key-positions = <28 27>;
        };

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <0 1>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <12 13>;
        };

        BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <24 25>;
        };

        BT_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <0 2>;
        };

        F12_key {
            bindings = <&kp F12>;
            key-positions = <8 7>;
        };

        F5_key {
            bindings = <&kp F5>;
            key-positions = <31 32>;
        };

        F10_key {
            bindings = <&kp F10>;
            key-positions = <31 33>;
        };

        F11_key {
            bindings = <&kp F11>;
            key-positions = <31 34>;
        };

        F9_key {
            bindings = <&kp F9>;
            key-positions = <7 9>;
        };
    };

    macros {
        ae_macro: ae_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_4) &kp LA(KP_NUMBER_5)>;
            label = "AE_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp dk_question      &kp PERIOD   &kp COMMA      &kp L     &kp P                     &kp Y           &kp F          &kp G        &kp C         &kp R  &kp Q  &kp RIGHT_PARENTHESIS
&mt LSHIFT ESCAPE    &lt 4 A      &kp O          &kp E     &lt 3 I                   &kp U           &kp D          &lt 2 H      &kp T         &kp N  &kp S  &kp QUESTION
&mt LCTRL AMPERSAND  &kp AT_SIGN  &kp BACKSLASH  &kp J     &kp K                     &kp X           &kp B          &kp M        &kp W         &kp V  &kp Z  &kp SLASH
                                                 &kp LGUI  &mt LEFT_SHIFT BACKSPACE  &mt LGUI TAB    &mt LCTRL RET  &lt 1 SPACE  &kp LEFT_ALT
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GT  &kp LT            &kp NON_US_BSLH  &kp LS(NON_US_BSLH)    &none               &kp MINUS         &kp RA(NUMBER_8)          &kp RA(N9)  &kp EXCLAMATION  &kp PIPE     &trans
&trans  &trans  &kp RA(NUMBER_2)  &kp LS(N8)       &kp LS(N9)             &kp LS(NUMBER_6)    &kp SLASH         &kp RA(N7)                &kp RA(N0)  &kp HASH         &kp PERCENT  &trans
&trans  &trans  &kp EQUAL         &trans           &kp RA(RIGHT_BRACKET)  &none               &kp RA(NUMBER_4)  &kp RA(NON_US_BACKSLASH)  &kp LS(N7)  &kp RA(EQUAL)    &trans       &trans
                                  &trans           &trans                 &trans              &trans            &trans                    &trans
            >;
        };

        navi {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp HOME  &kp UP    &kp END    &kp PG_UP        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans           &trans  &trans  &trans  &trans  &trans  &trans
                          &trans    &trans     &trans           &trans  &trans  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE2      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp SLASH   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PERIOD  &kp N7        &kp N8        &kp N9        &kp LS(SLASH)  &trans
                        &trans  &trans  &trans    &trans      &trans        &trans
            >;
        };

        shortcut {
            bindings = <
&trans  &trans  &trans  &trans     &kp LC(F)  &kp LC(LS(F))    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LC(S)  &kp LC(Z)  &kp LC(Y)        &trans  &trans  &trans  &trans  &trans  &trans
                        &trans     &trans     &trans           &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp N1  &kp Q  &kp W         &kp E       &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp N2  &kp A  &kp S         &kp D       &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp N3  &kp Z  &kp X         &kp C       &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                          &kp LEFT_ALT  &kp LSHIFT  &kp SPACE    &to 0   &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&kp dk_question    &kp J   &kp G   &kp M                        &kp P          &kp V              &kp HASH            &kp PERIOD      &kp dk_fslash       &kp Q     &kp dk_quot  &kp dk_equal
&mt LSHIFT ESCAPE  &lt 4 C &kp S   &kp N                        &lt 3 T        &kp K              &kp COMMA           &lt 2 A         &kp E               &kp I     &kp H        &kp dk_underscore
&mt LCTRL dk_apos  &kp X   &kp F   &kp L                        &kp D          &kp W              &kp dk_dash         &kp U           &kp O               &kp Y     &kp B        &kp Z
                                   &mt LEFT_ALT RA(NON_US_BACKSLASH) &mt LCTRL R    &mt LGUI RET       &mt LEFT_SHIFT TAB  &lt 1 SPACE     &kp BACKSPACE
            >;
        };
    };
};
